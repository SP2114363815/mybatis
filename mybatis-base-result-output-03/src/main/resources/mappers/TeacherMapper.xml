<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.atguigu.mapper.TeacherMapper">
    <!--
    期望非自增长的主键，交给mybatis帮助我们维护
    -->
    <insert id="insertTeacher">
<!--        插入之前先指定一段sql语句，生成一个组件值
            order="AFTER" sql语句是在插入语句之前还是之后执行
            resultType=返回值类型
            keyProperty查询到的结果给哪个结果赋值
-->
        <selectKey order="AFTER" resultType="string" keyProperty="tId">
            select REPLACE (UUID(),'-'.'')
        </selectKey>
        insert into teacher(t_id,t_name)value(#{tId},#{tName})
    </insert>
<!--    <select id="queryById" resultType="com.atguigu.pojo.Teacher" resultMap="">-->
<!--        列名和属性名不一致-->
<!--            方案一：起别名 select t_id tId,t_name tName form teacher where t_id=#{tId}-->
<!--            方案二：开启驼峰式映射-->
<!--            方案三：resultMap自定义映射 声明resultMap标签，自己定义映射规则-->
<!--                        id标识->select resultMap="标识"-->
<!--                        type->具体的返回值类型 全限定符和别名/集合只写泛型-->
<!--                    resultType按照规则自动映射，按照是否开启驼峰式映射，是否映射属性和列名-->
<!--                    ，只能映射一层结构，深层次的对象结构无法映射，多表查询的时候无法映射-->
<!--        select t_id tId,t_name tName form teacher where t_id=#{tId}-->
<!--    </select>-->
    <resultMap id="tMap" type="com.atguigu.pojo.Teacher">
        <id column="t_id" property="tId"/>
        <result column="t_name" property="tName"/>
    </resultMap>
    <select id="queryById" resultMap="tMap">
        select*from teacher where t_id=#{tId}
    </select>
</mapper>